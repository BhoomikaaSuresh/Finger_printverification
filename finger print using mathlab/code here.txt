% Read the image1
img1 = imread("fingerprint.png");
figure(1);
subplot(2,2,1)
imshow(img1);
title("original image1");

% Convert image1 to grayscale
img1_gray = rgb2gray(img1);
figure(1);
subplot(2,2,2)
imshow(img1_gray);
title("grayscale for image1");

% Apply median filtering to image1 and image2
img1_median = medfilt2(img1_gray, [3 3]); % Apply a 3x3 median filter
figure(3);
subplot(1,2,1)
imshow(img1_median);
title("median filtered image1");
img2_median = medfilt2(img1_gray, [3 3]); 
figure(3);
subplot(1,2,2)
imshow(img2_median);
title("median filtered image2");

% Perform dilation on the g median filtering of image1
dilated_img1 = imdilate(img1_median, strel('disk', 3));
figure(1);
subplot(2,2,3)
imshow(dilated_img1);
title("dilated for image1");

% Perform erosion on the median filtering of image1
eroded_img1 = imerode(img1_median ,strel('disk', 3));
figure(1);
subplot(2,2,4)
imshow(eroded_img1);
title("eroded for image1");


% Read the image2
img2 = imread("finger1.jpeg");
figure(2);
subplot(2,2,1)
imshow(img2);
title("original image2");

% Convert image2 to grayscale
img2_gray = rgb2gray(img2);
subplot(2,2,2)
imshow(img2_gray);
title("grayscale for image2");

% Perform dilation on the median filtering of image2
dilated_img2 = imdilate(img1_median, strel('disk', 3));
subplot(2,2,3)
imshow(dilated_img2);
title("dilated for image2");

% Perform erosion on the median filtering of image2
eroded_img2 = imerode(img1_median, strel('disk', 3));
subplot(2,2,4)
imshow(eroded_img2);
title("eroded for image2");

% Perform histogram equalization for eroded image1 and image2
img1_hist_processed = histeq(img1_gray);
img2_hist_processed = histeq(img2_gray);

% Display the histogram processed images
figure(4);
imshow(img1_hist_processed);
title("Histogram Processed Image 1");

figure(5);
imshow(img2_hist_processed);
title("Histogram Processed Image 2");

% Compute and plot the histograms
figure(6);
imhist(img1_hist_processed);
title("Histogram of Image 1");

figure(7);
imhist(img2_hist_processed);
title("Histogram of Image 2");

% Compute histograms for the grayscale images
histogram1 = imhist(img1_hist_processed);
histogram2 = imhist(img2_hist_processed);

% Compute the correlation coefficient between the histograms
correlation_coefficient = corr2(histogram1, histogram2);

% Set a threshold for decision making
threshold = 0.8; % Adjust as needed

% Make a decision based on the correlation coefficient
if correlation_coefficient > threshold
    disp('Fingerprints match.');
else
    disp('Fingerprints do not match.');
end